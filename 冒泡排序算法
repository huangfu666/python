冒泡排序：
冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 
算法描述：
1.比较相邻的元素。如果第一个比第二个大，就交换它们两个；
2.对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；
3.针对所有的元素重复以上的步骤，除了最后一个；
4.重复步骤1~3，直到排序完成。
冒泡排序算法代码描述：
def mp_sort(arr):
    """冒泡排序  依次查询临近的二个数，将较大的数放后面

    :param arr:要进行冒泡排序的数据
    """
    if len(arr) <= 1:
        return
    i = 0
    # 外循环控制循环次数 每一次循环结束后，最大的数都会在后面
    while i < len(arr):
    j = 0
        # 内循环从0开始控制比较次数
        while j < len(arr)-1-i:
            # 比较 如果前一个数大于后一个数 则换位置
            if arr[j] > arr[j+1]:
                temp = arr[j+1]
                arr[j+1] = arr[j]
                arr[j] = temp
            j += 1
        i += 1
